---
- hosts: kacs 
  become: true
  vars:
  tasks:
    - name: Directory
      file:
        path: "{{ item }}"
        state: directory
        recurse: true
        owner: root 
        group: root 
        mode: 0700
      with_items:
        - /etc/k8s/config
        - /var/lib/k8s

    - name: Install a list of packages
      apt:
        state: present
        update_cache: yes
        cache_valid_time: 86400
        pkg:
        - ca-certificates
        - curl
        - wget
        - gnupg-agent
        - software-properties-common
        - apt-transport-https
        - socat
        - conntrack
        - ipset
        - golang-cfssl

    - name: install Golang upstream
      unarchive:
        src: https://dl.google.com/go/go1.20.1.linux-amd64.tar.gz
        dest: /usr/local/
        remote_src: True
    - name: Set custom Golang path root
      blockinfile: 
        path: /root/.bashrc
        block: |
          export GOPATH=/home/vagrant/go
          export GOBIN=$GOPATH/bin
          export GOROOT=/usr/local/go
          export PATH=$PATH:$GOBIN:$GOROOT/bin
    - name: Set Custom Golang path User
      blockinfile: 
        path: /home/vagrant/.bashrc
        block: |
          export GOPATH=/home/vagrant/go
          export GOBIN=$GOPATH/bin
          export GOROOT=/usr/local/go
          export PATH=$PATH:$GOBIN:$GOROOT/bin
    - name: link golang
      file: src=/usr/local/go/bin/go dest=/bin/go state=link

    - name: install kubectl kube-proxy kubelet
      get_url:
        url: "https://storage.googleapis.com/kubernetes-release/release/v1.26.0/bin/linux/amd64/{{ item }}"
        dest: /usr/local/bin/
        mode: 0750
      with_items:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
        - kubectl

    - name: copy encryption
      copy:
        src: "{{ item }}"
        dest: /var/lib/k8s/
        owner: root
        group: root
        mode: 0750
      with_items:
        - 'script/cert/ca.pem'
        - 'script/cert/ca-key.pem'
        - 'script/cert/kubernetes-key.pem'
        - 'script/cert/kubernetes.pem'
        - 'script/cert/service-account-key.pem'
        - 'script/cert/service-account.pem'
        - 'script/cert/encryption-config.yaml'
        - 'script/cert/kube-controller-manager.kubeconfig'
        - 'script/cert/kube-scheduler.kubeconfig'

    - name: "service kube-api"
      template:
        src: fileconf/kube-apiserver.service.yaml.j2
        dest: /etc/systemd/system/kube-apiserver.service
        owner: root
        group: root
        mode: 0751

    - name: "service kube-controller-manager"
      template:
        src: fileconf/kube-controller-manager.service.yaml.j2
        dest: /etc/systemd/system/kube-controller-manager.service
        owner: root
        group: root
        mode: 0751

    - name: "Configure kube-scheduler"
      template:
        src: fileconf/kube-scheduler.yaml.j2
        dest: /etc/k8s/config/kube-scheduler.yaml
        owner: root
        group: root
        mode: 0751

    - name: "Service kube-scheduler"
      template:
        src: fileconf/kube-scheduler.service.yaml.j2
        dest: /etc/systemd/system/kube-scheduler.service
        owner: root
        group: root
        mode: 0751

    - name: "Services"
      shell: |
        sudo systemctl daemon-reload
        sudo systemctl enable kube-apiserver kube-controller-manager kube-scheduler
        sudo systemctl start kube-apiserver kube-controller-manager kube-scheduler
...
